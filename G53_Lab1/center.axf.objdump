
D:/uni/5th semester/ecse324/labs/lab1/G53_Lab1/center.axf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__cs3_interrupt_vector>:
			.text
			.global _start

_start: 	
			LDR R1, N			/* Register R1 holds number of elements */
   0:	e59f105c 	ldr	r1, [pc, #92]	; 64 <N>
			ADD R1, R1, #1
   4:	e2811001 	add	r1, r1, #1
			LDR R2, =ARRAY 		/* R2 holds pointer to first element in array */
   8:	e59f207c 	ldr	r2, [pc, #124]	; 8c <ARRAY+0x20>
			LDR R3, SUM			/* Holds value of sum */
   c:	e59f304c 	ldr	r3, [pc, #76]	; 60 <SUM>

00000010 <AVG_LOOP>:
			
AVG_LOOP:
			SUBS R1, R1, #1		/* Decrement the loop counter */
  10:	e2511001 	subs	r1, r1, #1
			BEQ COMPUTE_AVG		/* Go back to outer loop if counter has reached */	
  14:	0a000003 	beq	28 <COMPUTE_AVG>
			LDR R4, [R2]		/* Holds element of array */
  18:	e5924000 	ldr	r4, [r2]
			ADD R3, R3, R4 		/* Adds total sum to element of array */
  1c:	e0833004 	add	r3, r3, r4
			ADD R2, R2, #4		/* R2 points to next element in array */
  20:	e2822004 	add	r2, r2, #4
			B AVG_LOOP
  24:	eafffff9 	b	10 <AVG_LOOP>

00000028 <COMPUTE_AVG>:

COMPUTE_AVG:
			LDR R5, LOG         /* Holds value of log N */
  28:	e59f5038 	ldr	r5, [pc, #56]	; 68 <LOG>
			ASR R3, R3, R5		/* Shifts right sum by log N (divides by N) */
  2c:	e1a03553 	asr	r3, r3, r5
			LDR R1, N			/* Reload content of N in R1 */
  30:	e59f102c 	ldr	r1, [pc, #44]	; 64 <N>
			ADD R1, R1, #1
  34:	e2811001 	add	r1, r1, #1
			LDR R2, =ARRAY		/* R2 points to first element in array */
  38:	e59f204c 	ldr	r2, [pc, #76]	; 8c <ARRAY+0x20>
			B SUBSTRACT_LOOP	/* Go to loop that subtracts average from every element */
  3c:	eaffffff 	b	40 <SUBSTRACT_LOOP>

00000040 <SUBSTRACT_LOOP>:

SUBSTRACT_LOOP:
			SUBS R1, R1, #1		/* Decrement the loop counter */
  40:	e2511001 	subs	r1, r1, #1
			BEQ END				/* Go back to outer loop if counter has reached */	
  44:	0a000004 	beq	5c <END>
			LDR R4, [R2]		/* Register R2 points to the actual element in the array. */
  48:	e5924000 	ldr	r4, [r2]
			SUBS R4, R4, R3 	/* Subtract average from element */
  4c:	e0544003 	subs	r4, r4, r3
			STR R4, [R2]		/* Store new element of array back into the array. */
  50:	e5824000 	str	r4, [r2]
			ADD R2, R2, #4 		/* R2 points to next element in array */
  54:	e2822004 	add	r2, r2, #4
			B	 SUBSTRACT_LOOP
  58:	eafffff8 	b	40 <SUBSTRACT_LOOP>

0000005c <END>:

END: 		B 	END					/* Infinite loop */
  5c:	eafffffe 	b	5c <END>

00000060 <SUM>:
  60:	00000000 	.word	0x00000000

00000064 <N>:
  64:	00000008 	.word	0x00000008

00000068 <LOG>:
  68:	00000003 	.word	0x00000003

0000006c <ARRAY>:
  6c:	00000001 	.word	0x00000001
  70:	00000002 	.word	0x00000002
  74:	00000003 	.word	0x00000003
  78:	00000004 	.word	0x00000004
  7c:	00000006 	.word	0x00000006
  80:	00000007 	.word	0x00000007
  84:	00000008 	.word	0x00000008
  88:	00000009 	.word	0x00000009
  8c:	0000006c 	.word	0x0000006c
